#!/bin/sh
# @configure_input@
#============================================================================
#
#     This file is part of the Code_Saturne Kernel, element of the
#     Code_Saturne CFD tool.
#
#     Copyright (C) 1998-2008 EDF S.A., France
#
#     contact: saturne-support@edf.fr
#
#     The Code_Saturne Kernel is free software; you can redistribute it
#     and/or modify it under the terms of the GNU General Public License
#     as published by the Free Software Foundation; either version 2 of
#     the License, or (at your option) any later version.
#
#     The Code_Saturne Kernel is distributed in the hope that it will be
#     useful, but WITHOUT ANY WARRANTY; without even the implied warranty
#     of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with the Code_Saturne Kernel; if not, write to the
#     Free Software Foundation, Inc.,
#     51 Franklin St, Fifth Floor,
#     Boston, MA  02110-1301  USA
#
#============================================================================
#
#=================================================
#     Code_Saturne help
#=================================================
#

#
# Styles
# ======

 TERM=$TERM

 BO=`tput bold`
 SO=`tput smso`
 NO=`tput rmso ; tput sgr0`

#
# Function: exit
# ==============

 local_exit()
 {
   tput rmso
   tput init
   exit
 }

#
# Function: error message with exit
# =================================

 sortie()
 {
   dir_sortie=`pwd`
   echo "   Directory: ${dir_sortie}"
   echo
   echo "   ${BO}Error${NO}: $*"
   tput init
   echo
   local_exit
 }


#
# Function: usage
# ===============

 usage() {
    echo
    echo "   usage: ${BO}cs_info${NO}                      "
    echo "      or: ${BO}cs_info${NO}  ${SO}<topic>${NO}   "
    echo
    echo "        with:                                    "
    echo "        ${SO}<topic>${NO}: ${BO}version${NO}   : Code_Saturne version"
    echo "                  ${BO}user${NO}       : user manual (pdf)"
    echo "                  ${BO}theory${NO}     : theory and programmer's guide (pdf)"
    echo "                  ${BO}tutorial${NO}   : Code_Saturne tutorial (pdf)"
    echo "                  ${BO}ecs_user${NO}   : user and theory manual for the Preprocessor module (pdf)"
    echo "                  ${BO}cs${NO}         : usage for the Kernel module"
    echo "                  ${BO}ecs${NO}        : usage for the Preprocessor module"
    echo
    echo
    tput init
    local_exit
 }


# Test if xpdf or acroread exists
isthere=`which xpdf 2>/dev/null |wc -w`
if [ $isthere -eq 1 ] ; then
  acroread=xpdf
else
  acroread=acroread
fi

# Kernel installation parameters
prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
datarootdir=@datarootdir@
datadir=@datadir@

# Preprocessor installation parameters
ecs_prefix=@ecs_prefix@
ecs_exec_prefix=${ecs_prefix}
ecs_bindir=${ecs_exec_prefix}/bin
ecs_datarootdir=${ecs_prefix}/share
ecs_datadir=${ecs_datarootdir}

# Interface installation parameters
ics_prefix=@ics_prefix@

docPATH=${datadir}/doc

 topic=$1
 if   [ "$topic" = "version" ] ; then
   echo
   echo " ${BO}Code_Saturne version${NO} : $prefix"
   echo " ${BO}Preprocessor version${NO} : $ecs_prefix"
   echo " ${BO}GUI version${NO}          : $ics_prefix"
   echo
   tput init
 elif [ "$topic" = "user" ] ; then
   [ -d $docPATH ] || sortie "The documentation directory $docPATH does not exist"
   saturnepdf=$docPATH/user.pdf
   echo
   echo " ${BO}user manual${NO} : $saturnepdf"
   echo
   tput init
   $acroread $saturnepdf  || sortie "The ${SO}$acroread $saturnepdf${NO} command failed"
   tput init
 elif [ "$topic" = "theory" ] ; then
   [ -d $docPATH ] || sortie "The documentation directory $docPATH does not exist"
   noyaupdf=$docPATH/theory.pdf
   echo
   echo " ${BO}theory and programmer's guide${NO} : $noyaupdf"
   echo
   tput init
   $acroread $noyaupdf
   tput init
 elif [ "$topic" = "tutorial" ] ; then
   [ -d $docPATH ] || sortie "The documentation directory $docPATH does not exist"
   noyaupdf=$docPATH/tutorial.pdf
   echo
   echo " ${BO}Code_Saturne tutorial${NO} : $noyaupdf"
   echo
   tput init
   $acroread $noyaupdf
   tput init
 elif [ "$topic" = "ecs_user" ] ; then
   ecsdocpdf=${ecs_datadir}/doc/mu_ecs.pdf
   echo
   echo " ${BO}Preprocessor module user manual${NO} : $ecsdocpdf"
   echo
   tput init
   $acroread $ecsdocpdf || sortie "The ${SO}$acroread $ecsdocpdf${NO} command failed"
   tput init
 elif [ "$topic" = "cs" ] ; then
   cs=${bindir}/cs_solver
   echo
   echo " ${BO}Kernel module usage${NO}"
   echo
   tput init
   eval $cs -h || sortie "The ${SO}$cs -h${NO} command failed."
   echo
   echo " ${BO}Kernel module usage${NO}"
   echo
   tput init
 elif [ "$topic" = "ecs" ] ; then
   ecs=${ecs_bindir}/ecs
   echo
   echo " ${BO}Preprocessor module${NO} : use ecs or $ecs"
   echo
   tput init
   eval $ecs -h || sortie "The ${SO}$ecs -h${NO} command failed."
   echo
   echo " ${BO}Preprocessor module${NO} : use ecs or $ecs"
   echo
   tput init
else
  usage
 fi
